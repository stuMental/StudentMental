<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.student.modules.sys.dao.SysDeptDao">

	<select id="queryObject" resultType="io.student.modules.sys.entity.SysDeptEntity">
		select * from sys_dept where dept_id = #{value} and del_flag = 0
	</select>

	<select id="queryList" resultType="io.student.modules.sys.entity.SysDeptEntity">
		select d.*,(select p.name from sys_dept p where p.dept_id = d.parent_id) as parentName
		from sys_dept d where d.del_flag = 0
		<!--  数据过滤  -->
		${filterSql}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by d.${sidx} ${order}
            </when>
			<otherwise>
                order by d.order_num asc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	 
	<insert id="save" parameterType="io.student.modules.sys.entity.SysDeptEntity" useGeneratedKeys="true" keyProperty="deptId">
		insert into sys_dept
		(
			`parent_id`, 
			`name`, 
			`order_num`
		)
		values
		(
			#{parentId}, 
			#{name}, 
			#{orderNum}
		)
	</insert>
	 
	<update id="update" parameterType="io.student.modules.sys.entity.SysDeptEntity">
		update sys_dept 
		<set>
			<if test="parentId != null">`parent_id` = #{parentId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="orderNum != null">`order_num` = #{orderNum}</if>
		</set>
		where dept_id = #{deptId}
	</update>
	
	<update id="delete">
		update sys_dept set del_flag = -1 where dept_id = #{value}
	</update>
	
	<select id="queryDetpIdList" resultType="long">
		select dept_id from sys_dept where parent_id = #{value} and del_flag = 0
	</select>
	
	<select id="selectleavel"  resultType="int">
	select level from (
SELECT ID.level,DATA.* FROM(
SELECT @ids as _ids, (
SELECT @ids:=GROUP_CONCAT(dept_id)
FROM sys_dept
WHERE FIND_IN_SET(parent_id,@ids)
)as cids,
@l:=@l+1 as level
FROM sys_dept,
(SELECT @ids:=0,@l:=-1)b
WHERE @ids IS NOT NULL
)ID,sys_dept DATA
WHERE FIND_IN_SET(DATA.dept_id,ID._ids)
ORDER BY level,dept_id
) as hh where hh.dept_id=#{dept_id}
	</select>
	
	
	

</mapper>